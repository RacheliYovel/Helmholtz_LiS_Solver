using PyPlot;
using SparseArrays;
f = x->cos.(2*x);
q = x->-4cos.(2x);
figure()
x = 0.0 : 0.01 : 1.0;
plot(x,f(x))
title("Exact f");xlabel("x"); ylabel("f(x)");
for h=[0.25,0.1,0.05]
    x = 0.0:h:1.0; x_in = x[2:end-1];
    n = length(x)-2;
    L = spdiagm(-1 => ones(n-1), 0 => -2*ones(n), 1 => ones(n-1));
    BC = zeros(n); BC[1] = f(0.0);BC[end] = f(1.0);
    b = (h^2)*q(x_in) - BC;
    u = L\b;
    plot(x,[BC[1];u;BC[end]])
end
legend(("Exact f","Approximate f with h=0.25","Approximate f with h=0.1","Approximate f with h=0.05"))
title("The numerical approximations of f");xlabel("x"); ylabel("(approximate) f(x)");
figure();
for h=[0.25,0.1,0.05]
    x = 0.0:h:1.0; x_in = x[2:end-1];
    n = length(x)-2;
    L = spdiagm(-1 => ones(n-1), 0 => -2*ones(n), 1 => ones(n-1));
    BC = zeros(n); BC[1] = f(0.0);BC[end] = f(1.0);
    b = (h^2)*q(x_in) - BC;
    u = L\b;
    semilogy(x,abs.(f(x) - [BC[1];u;BC[end]]).+1e-5)
end
legend(("Approximate f with h=0.25","Approximate f with h=0.1","Approximate f with h=0.05"))
title("The approximation error");xlabel("x");ylabel("approximation error.");
